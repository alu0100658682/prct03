18. Muestra la cadena "Hola Mundo" y devuelve el nil del "puts"
21. Mediante "\t\n" realiza la tabulación y el salto de línea mientras que con  '\t\n' muestra el texto que se encuentra entre las comillas. Las comillas simples muestran literalmente lo que hay dentro de las comillas y las dobles lo interpretan
22. Realiza la función como el puts, %q muestra literalmente el contenido de las comillas. Muestra "hello world\\n"
23. Realiza la función como el puts, %Q interpreta el contenido de las comillas.Muestra "hello world" seguido de un retorno de carro.
24. "--4--\n--2--\n" Interpreta el contenido
25."--\#{a}--\n--\#{b}--\n" No interpreta el contenido
26. - "he"
    - "o"
    - "hello"
27. "hello world"
28. "..."
29. "2 2 2"
30. Crea un array con cada palabra de la frase en una posición de este array
31. Realiza la misma función que el punto anterior, interpretando el contenido de las llaves
32. Realiza la misma función que el punto anterior, salvo que en este caso no interpreta el contenido de las llaves.
33. Un array de 3 posiciones con nil en todas sus posiciones.
34. Un array de 3 posiciones con 0 en todas sus posiciones.
35. "[[1, 2], [3, 4]]" Array bidimensional
36. "[0, 2, 4]"  
37. ["b"]
    ["d", "e"]
    ["a", "b", "c"]
    ["a"]
    ["d", "e"]
38. ["A", "B", "c", "d", "e"]
    ["A", "B", "C", "D", "E"]
    [1, 2, 3, "A", "B", "C", "D", "E"]
    [3, "A", "B", "C", "D", "E"]
    [3, "A", "B", "C", "D", "Z"]
    [3, "A", "B", "C", nil] 
39. [1, 2, 3]
    [1, 2, 3, 4, 5] 
    [1, 2, 3, 4, 5, [6, 7, 8]] 
    TypeError: can't convert Fixnum into Array
40.["a", "b", "c", "b", "a"]
    ["a", "a"] 
41.[0, 0, 0, 0, 0, 0, 0, 0]
42.[1]
    [1, 2, 3]
    [1, 2, 3[4, 5, 6]]
    [1, 2, 3[4, 5, 6], 7, 8]
43. [1, 2, 3, 4, 5]
    [5, 4, 3, 2, 1]
    [2, 3, 4]
    [4, 3, 2]


44.[1, 2, 3, 4, 5, 6, 7, 8, 9, 10] 
    [1, 2, 3, 4, 5, 6, 7, 8, 9]
    false
    true
    1 3 5 7 9  => 1...10 
    NoMethodError: undefined method `to_a' for 3:Fixnum
45. true
    true
    true
46. TrueClass
    FalseClass
    hello 	=>nil
    =>nil
    hello 	=>nil
47. Symbol
    false
    true
    Symbol
    true
    true
48. Rub => nil
    RubJava => nil 
49.  "3 rubies"
    
50. [4, 5] 
    5d
    [1, 2, 3] 
51. [:a, :b]
    [1, 2]
    {:a=>1, :b=>2, :c=>3}
    {:a=>1, :b=>2, :c=>3}
    {:b=>2, :c=>3}
    {:a=>1}
    {:a=>1}
52. LocalJumpError: no block given (yield)
53. Ambos crean un Hash vacío, (también conocidos como arrays asociativos, mapas o diccionarios) en los hashes se puede indexar con objetos de cualquier tipo: strings, expresiones regulares, etc.


54. ["hello", "world", "hello", "LPP"]
55. Ordena en función de las keys, en este caso muestra los valores en orden 3-2-1, ya que se corresponden a las keys a-b-c, si introducimos entre alguna de estas keys otro nuevo valor usando como key una letra posterior a las ya usadas, al usar el sort, las mostrará ordenadas alfabéticamente.
    

    

    
